import { Request, Response } from "express";
import expressAsyncHandler from "express-async-handler";

import {install_ingress} from '../utils/kube/install_ingress_nginx';
import {createDeploymentAndService} from '../utils/kube/create_service';
import {pushRule, removeRule} from '../utils/kube/ingress_resource'


export const create_service= expressAsyncHandler(
    async (req: Request, res: Response)=>{
        const kubeConfigText=`apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJVGllM0tObU9SQ3d3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1Ua3hPREV6TlRWYUZ3MHpOREV4TVRjeE9ERTROVFZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVVDJNeXRzRVpoZlZaWUNTSWdDeVFMK3piT0hDNkVySENNNHVlenR0ZmdxclJJVWFiY3ZjSjI4YlIKdVdXQWJIZ1hZMzdYUE9VMEw1VzZ4aUl2aUs0RTRCYllrWngxMnVtUFdWeXkydVV4Y1dRZ0R2eFNXR3pzc29iTApxYmljai9namhPM3N3OXhGNXkzZGphMUZGOHpyWTV4cUM2di9wV28zZDJNcmlad0M3Y1YxYmZjVkU5OTM4dmh2ClFxSXduRjNjYUczRFRGNkYrYVlzTW9SMVRuQmhUeHRMZ3VMTU5EeEtWYzdxT0w2K1ZYa2NKbmNUTlNldGdRK1MKMEVHMm1EL1ZxS0tGOSsxNTI4ZTRzRHN2MXdBekllWEdOZHVveWpjU3RWVm00aC9yUEt1MHd3VUdmdy9uREdVdQp2MzJaYndzRFFENXV3VFViMUdlSXVmQ0VucDdoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRVzMwZ3VmUVJpS1IxL2NKYUo4Zk9qMGhoYnNEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWZBbHFZVVFYdQpPWmdvK0RLMWE0ZitYSVFwZVNzcXk4VVVuTi9WSDhab3BrTUpBSm9YSEpBdHdKamFtQXpLQ1ZYQXZENXRzOHlpCjdsRHlkaUdDL3hTZlNWaitYZ3pUVnlUeHJaTlYvdXVjZDREVDVxWjRaRmh6bzZNdUJteGJ2U1FIdmJTeE5sMFgKOFNHRmdpTCtiSFJFZDQ5RDJ3SGVBTXJNcjBFUXRIVzdPQW9lVGRqd3FPendjbWxXREdSZFB0YStXTWl4YUsydApzWDVCKzBnbElXcDBNd1JUaDhYQ21OenY4WFo1K0tNNGdJQ0ZHSVd3elhSaFlZbzFiajJLRm8zY2YrY2hDN3lQCjBpTzd2em80TnJJczRObzFhSDZNOWRrWld3OFZvZE9pL3JPYkxNVVJPaUNacnZIdGdiaXdJdWtvVFBTa2s0cHAKcHFnYkN4SnQ2ZFNOCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://127.0.0.1:6443
  name: docker-desktop
contexts:
- context:
    cluster: docker-desktop
    user: docker-desktop
  name: docker-desktop
current-context: docker-desktop
kind: Config
preferences: {}
users:
- name: docker-desktop
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJWjd0ZFZ3eHN2Zm93RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1Ua3hPREV6TlRWYUZ3MHlOVEV4TVRreE9ERTROVFphTURZeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sc3dHUVlEVlFRREV4SmtiMk5yWlhJdFptOXlMV1JsCmMydDBiM0F3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGhpSG5MZE1kSjVOYVIKN3FnMjVGcndsNmJmK3BzbkszUFU1UCtKTG04ck5ZVjF0QjFtUHYrYUFnek9NOTRYaUJHR0U2MFY3UWpFQUU5LwozYjYvOGs3Um9TMVZCZUVZd3Y0SHR1Q3cxTkh2eXJSK3JSK090K2xTdzVUcHlBc210RmRsY0ZhQ1cxSUFwZ0NMCmVaVG5OaThBU1lpZm1GL2dPcTFwbU10UWw4dXk4Zmp5UG04WGZ5S3JCelpWekszd0ZqeXVINk9ENURxZCs0YkIKVFlydE9NcE1OMnE0Nm5Ca3czdzZBaDJPeXh4T0g4N00vV3Jla3gxbXRQOEFVRnNSejltempSNjM0bjZzd2lEegplK0hCWFBVeEJWcWQ1Z3NhSXJ2YTg1byt1aWIvMC95OVFDOXVJWmM5UlE1U01lOG1MbUc1eUFubTY3c29kUnNXClpROGp3R2VoQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZCYmZTQzU5QkdJcEhYOXdsb254ODZQUwpHRnV3TUIwR0ExVWRFUVFXTUJTQ0VtUnZZMnRsY2kxbWIzSXRaR1Z6YTNSdmNEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBbGRoU0c0d0RvVi9HcTJFNmFxQWJPNFNPNmNpTjR4YmZZSkU0VytkdGl5TXJGcnhZL1k3aFRaVDAKTnM4Qjd3Nlh6YUNyQTl2bjFUalpuR2JVaWhWZVJvRjQvcTZsZjRBVTBrRWhRUW1ZRkRsaEVFa3hzRmMwaytieAowU2JaWjFsZFd3VllVYjFqWkV5cnVLNGREWXk3V0cxZ2hHbVJrdTc5K1Q0bFFHUUlFZmJmeVZ0YmtkM1Jydk9xCkJBaEM1YXliRU5zUTlTYU9uVDNkVTlqUDhDZVBDa1NQcFhTNERUY3JMOWJTay9KVGJ0dVNwNkdEallYa1lvd2sKSFJvT3pBZzRscmx4YlVCQmJRS1ZLMVBRbWV4dEhLSy9TaFRpNkZ4YkdtT3E0MmwzV0ZoMXBoWmhHc3RESWxvTQpJZ3dKcGp6TVVOb0MvWmhER3hxYjUwMkNEV1ZSVlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNFloNXkzVEhTZVRXa2U2b051UmE4SmVtMy9xYkp5dHoxT1QvaVM1dkt6V0ZkYlFkClpqNy9tZ0lNempQZUY0Z1JoaE90RmUwSXhBQlBmOTIrdi9KTzBhRXRWUVhoR01MK0I3YmdzTlRSNzhxMGZxMGYKanJmcFVzT1U2Y2dMSnJSWFpYQldnbHRTQUtZQWkzbVU1ell2QUVtSW41aGY0RHF0YVpqTFVKZkxzdkg0OGo1dgpGMzhpcXdjMlZjeXQ4Qlk4cmgramcrUTZuZnVHd1UySzdUaktURGRxdU9wd1pNTjhPZ0lkanNzY1RoL096UDFxCjNwTWRaclQvQUZCYkVjL1pzNDBldCtKK3JNSWc4M3Zod1Z6MU1RVmFuZVlMR2lLNzJ2T2FQcm9tLzlQOHZVQXYKYmlHWFBVVU9Vakh2Smk1aHVjZ0o1dXU3S0hVYkZtVVBJOEJub1FJREFRQUJBb0lCQVFEUEFpK1l1ZFY2VTl0SApFMkcvRUpjUUlvSi9MMDFlQkpwTEhPNFlBbER6dmlxRHdSRURHbXdOOWplK3hRampYSGVKTTJJNXI5bk4zZU1hCm9IUkhScWRsN3FUblY0QW05RU9xM1FjY0NCdXlGOExZU3h1ZUtkeTFwT040T2E5U2xWRnF3RlFIVHI3VDdZcXUKZXFoY0dQWEhNN2Q5bGFUYThjRGVIZXJ3VElRaCtCTEJrQ241QlpTQVdmMGNqZzZYeWlxWkxISm8vSTR6KzFNeQplNGVkeFFNN29RZVRWSHUzbkEzZW1jQUR2TThpODFuVmxwUUE3OTJGd05TUXI2aE1xYk5oRlRCbWh5RmVwQmpuCldpOVByZW5MZjFlbXVpZVIvQ2ozRW4yQTNqVXl0S0VIQXgvbGk5bnh0cjUyWWdVWjcyZlZTbVBxaVByTDMzdnUKd1ROdGd6YUpBb0dCQU8yeXR1OGZOODR4d1F1a2JqVnRITG82WG1qbFdCeFZKUVpOQXJVQjZhT2ZVbEw0aUIzaQo4QThrcWFrV2lJa1R1NU50ajFrS202ck1aMGFDWmxUK3VYeGIxbkRaeEFXeEJMWXRKeDBrQUdYYnlua0lSU05RCkg3K0lYTURmNnRCV0kzQXRTUTZyQWU2RktOOXIxTTh4KzlhWTFzQUFkcDhYTTBrNnVMeGg1TXFUQW9HQkFQTGwKK2R5NUZTNnNyRUYrS0xDMnIrMFdQajlhcDlYTVpMbEU3bXJmaVAycUR6Z3lIVU9ld2VVSWNaaGo4cm1pQ0tsNQpMeGhLVDVVSWlNd3NKdUJ0U0psbnBRbDhpNXQ1RG9yQk5nbnFjZVJVeGlpRTJEN3dDSnVST2tSbnNFblFyRWswCk9Da08zQ1hxbjNKVTRpVUFXN0tQTjJheS9CUkNQVkZwQk1IQXBZRjdBb0dBUERiYnRMTzUxVmd4U1J1OGQzaE8Kb0xhTW1CSVJRZ3dudHZMblRxZFBZbzNIc3hFV21rdVUrS0VYQWFpZHFldi94cGNvaXl2dXgxUEVqYzRXMGswOAorODNnQXZLSGY5R2FHZlJTUmtXS2ZFTXpoWG1jMmhkQUU2c2RwQmFWUzNXbXdKSVlRY2o4VWtvVlVwUGtjeUI4ClpaNk9PRkZsdTJPTE1HL1p3SThrQUZVQ2dZRUEwaFU4dmI1SzV0cXNCZDFDL2t5VDdxQmRhRmhWYjJKZi82bngKOS9lc3VaRWJwc1FaY1lIZk8rUEl0RUJHRUc1bnhZU3R5Zm1EeVdmZlFaQXljOHV4amhVSnRpSEZjY3dMV3RGdgpsclh5bWNVRXVzamphOVFaN2N0M05QRGxsWUpwY01zOGc2NTVsRVhRY0llZ0xOYVplTi9MMEFTZ2FEaytaYXBLClZmWDBiLzhDZ1lBN2VMUGVoQW0zRUhFd21hc3dSdERWbEFjYkdxdEZzS2YySEo0TGo3d2NrOW5ncGNiK1EyYnIKa2hWNUVHbjdKcnZBdHg3djlRNWNNbXdYVnlrNVpEZXBmanBiOWhYb0dFeGYzQkUwUDZHdFYrOVBQeTBTZ0pwSwpMNVVTSDQ3V1RWTmRveUxRR2FtRlc3UEpYc25rZk9rSEFpOFZZV0ZhaFFKL3FHMGV6bWFHRnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
`
        const {serviceName, imagURL, host,containerPort } = req.body;
        const deploymentName = serviceName;
        const namespace = 'default';
        const containers= [
            {
                name: serviceName,
                namespace: 'default',
                imageName: imagURL,
                containerPort: containerPort,
                servicePort: 80
            }
        ]
        const serviceData = await createDeploymentAndService(namespace,serviceName,deploymentName,containers,kubeConfigText);
        const ingressName = 'api-gateway'
        const optional_host = 'anupamkumarsourav.site';
        const subdomain = serviceName
        const servicePort = 80;
        const ingressData = await pushRule(namespace,ingressName,host || optional_host,serviceName,kubeConfigText,subdomain,servicePort);
        res.status(201).json({service:serviceData,ingressData:ingressData});
    }
)

export const remove_service= expressAsyncHandler(
    async (req: Request, res: Response)=>{
        const kubeConfigText=`apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJVGllM0tObU9SQ3d3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1Ua3hPREV6TlRWYUZ3MHpOREV4TVRjeE9ERTROVFZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVVDJNeXRzRVpoZlZaWUNTSWdDeVFMK3piT0hDNkVySENNNHVlenR0ZmdxclJJVWFiY3ZjSjI4YlIKdVdXQWJIZ1hZMzdYUE9VMEw1VzZ4aUl2aUs0RTRCYllrWngxMnVtUFdWeXkydVV4Y1dRZ0R2eFNXR3pzc29iTApxYmljai9namhPM3N3OXhGNXkzZGphMUZGOHpyWTV4cUM2di9wV28zZDJNcmlad0M3Y1YxYmZjVkU5OTM4dmh2ClFxSXduRjNjYUczRFRGNkYrYVlzTW9SMVRuQmhUeHRMZ3VMTU5EeEtWYzdxT0w2K1ZYa2NKbmNUTlNldGdRK1MKMEVHMm1EL1ZxS0tGOSsxNTI4ZTRzRHN2MXdBekllWEdOZHVveWpjU3RWVm00aC9yUEt1MHd3VUdmdy9uREdVdQp2MzJaYndzRFFENXV3VFViMUdlSXVmQ0VucDdoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRVzMwZ3VmUVJpS1IxL2NKYUo4Zk9qMGhoYnNEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWZBbHFZVVFYdQpPWmdvK0RLMWE0ZitYSVFwZVNzcXk4VVVuTi9WSDhab3BrTUpBSm9YSEpBdHdKamFtQXpLQ1ZYQXZENXRzOHlpCjdsRHlkaUdDL3hTZlNWaitYZ3pUVnlUeHJaTlYvdXVjZDREVDVxWjRaRmh6bzZNdUJteGJ2U1FIdmJTeE5sMFgKOFNHRmdpTCtiSFJFZDQ5RDJ3SGVBTXJNcjBFUXRIVzdPQW9lVGRqd3FPendjbWxXREdSZFB0YStXTWl4YUsydApzWDVCKzBnbElXcDBNd1JUaDhYQ21OenY4WFo1K0tNNGdJQ0ZHSVd3elhSaFlZbzFiajJLRm8zY2YrY2hDN3lQCjBpTzd2em80TnJJczRObzFhSDZNOWRrWld3OFZvZE9pL3JPYkxNVVJPaUNacnZIdGdiaXdJdWtvVFBTa2s0cHAKcHFnYkN4SnQ2ZFNOCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://127.0.0.1:6443
  name: docker-desktop
contexts:
- context:
    cluster: docker-desktop
    user: docker-desktop
  name: docker-desktop
current-context: docker-desktop
kind: Config
preferences: {}
users:
- name: docker-desktop
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJWjd0ZFZ3eHN2Zm93RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1Ua3hPREV6TlRWYUZ3MHlOVEV4TVRreE9ERTROVFphTURZeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sc3dHUVlEVlFRREV4SmtiMk5yWlhJdFptOXlMV1JsCmMydDBiM0F3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGhpSG5MZE1kSjVOYVIKN3FnMjVGcndsNmJmK3BzbkszUFU1UCtKTG04ck5ZVjF0QjFtUHYrYUFnek9NOTRYaUJHR0U2MFY3UWpFQUU5LwozYjYvOGs3Um9TMVZCZUVZd3Y0SHR1Q3cxTkh2eXJSK3JSK090K2xTdzVUcHlBc210RmRsY0ZhQ1cxSUFwZ0NMCmVaVG5OaThBU1lpZm1GL2dPcTFwbU10UWw4dXk4Zmp5UG04WGZ5S3JCelpWekszd0ZqeXVINk9ENURxZCs0YkIKVFlydE9NcE1OMnE0Nm5Ca3czdzZBaDJPeXh4T0g4N00vV3Jla3gxbXRQOEFVRnNSejltempSNjM0bjZzd2lEegplK0hCWFBVeEJWcWQ1Z3NhSXJ2YTg1byt1aWIvMC95OVFDOXVJWmM5UlE1U01lOG1MbUc1eUFubTY3c29kUnNXClpROGp3R2VoQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZCYmZTQzU5QkdJcEhYOXdsb254ODZQUwpHRnV3TUIwR0ExVWRFUVFXTUJTQ0VtUnZZMnRsY2kxbWIzSXRaR1Z6YTNSdmNEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBbGRoU0c0d0RvVi9HcTJFNmFxQWJPNFNPNmNpTjR4YmZZSkU0VytkdGl5TXJGcnhZL1k3aFRaVDAKTnM4Qjd3Nlh6YUNyQTl2bjFUalpuR2JVaWhWZVJvRjQvcTZsZjRBVTBrRWhRUW1ZRkRsaEVFa3hzRmMwaytieAowU2JaWjFsZFd3VllVYjFqWkV5cnVLNGREWXk3V0cxZ2hHbVJrdTc5K1Q0bFFHUUlFZmJmeVZ0YmtkM1Jydk9xCkJBaEM1YXliRU5zUTlTYU9uVDNkVTlqUDhDZVBDa1NQcFhTNERUY3JMOWJTay9KVGJ0dVNwNkdEallYa1lvd2sKSFJvT3pBZzRscmx4YlVCQmJRS1ZLMVBRbWV4dEhLSy9TaFRpNkZ4YkdtT3E0MmwzV0ZoMXBoWmhHc3RESWxvTQpJZ3dKcGp6TVVOb0MvWmhER3hxYjUwMkNEV1ZSVlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNFloNXkzVEhTZVRXa2U2b051UmE4SmVtMy9xYkp5dHoxT1QvaVM1dkt6V0ZkYlFkClpqNy9tZ0lNempQZUY0Z1JoaE90RmUwSXhBQlBmOTIrdi9KTzBhRXRWUVhoR01MK0I3YmdzTlRSNzhxMGZxMGYKanJmcFVzT1U2Y2dMSnJSWFpYQldnbHRTQUtZQWkzbVU1ell2QUVtSW41aGY0RHF0YVpqTFVKZkxzdkg0OGo1dgpGMzhpcXdjMlZjeXQ4Qlk4cmgramcrUTZuZnVHd1UySzdUaktURGRxdU9wd1pNTjhPZ0lkanNzY1RoL096UDFxCjNwTWRaclQvQUZCYkVjL1pzNDBldCtKK3JNSWc4M3Zod1Z6MU1RVmFuZVlMR2lLNzJ2T2FQcm9tLzlQOHZVQXYKYmlHWFBVVU9Vakh2Smk1aHVjZ0o1dXU3S0hVYkZtVVBJOEJub1FJREFRQUJBb0lCQVFEUEFpK1l1ZFY2VTl0SApFMkcvRUpjUUlvSi9MMDFlQkpwTEhPNFlBbER6dmlxRHdSRURHbXdOOWplK3hRampYSGVKTTJJNXI5bk4zZU1hCm9IUkhScWRsN3FUblY0QW05RU9xM1FjY0NCdXlGOExZU3h1ZUtkeTFwT040T2E5U2xWRnF3RlFIVHI3VDdZcXUKZXFoY0dQWEhNN2Q5bGFUYThjRGVIZXJ3VElRaCtCTEJrQ241QlpTQVdmMGNqZzZYeWlxWkxISm8vSTR6KzFNeQplNGVkeFFNN29RZVRWSHUzbkEzZW1jQUR2TThpODFuVmxwUUE3OTJGd05TUXI2aE1xYk5oRlRCbWh5RmVwQmpuCldpOVByZW5MZjFlbXVpZVIvQ2ozRW4yQTNqVXl0S0VIQXgvbGk5bnh0cjUyWWdVWjcyZlZTbVBxaVByTDMzdnUKd1ROdGd6YUpBb0dCQU8yeXR1OGZOODR4d1F1a2JqVnRITG82WG1qbFdCeFZKUVpOQXJVQjZhT2ZVbEw0aUIzaQo4QThrcWFrV2lJa1R1NU50ajFrS202ck1aMGFDWmxUK3VYeGIxbkRaeEFXeEJMWXRKeDBrQUdYYnlua0lSU05RCkg3K0lYTURmNnRCV0kzQXRTUTZyQWU2RktOOXIxTTh4KzlhWTFzQUFkcDhYTTBrNnVMeGg1TXFUQW9HQkFQTGwKK2R5NUZTNnNyRUYrS0xDMnIrMFdQajlhcDlYTVpMbEU3bXJmaVAycUR6Z3lIVU9ld2VVSWNaaGo4cm1pQ0tsNQpMeGhLVDVVSWlNd3NKdUJ0U0psbnBRbDhpNXQ1RG9yQk5nbnFjZVJVeGlpRTJEN3dDSnVST2tSbnNFblFyRWswCk9Da08zQ1hxbjNKVTRpVUFXN0tQTjJheS9CUkNQVkZwQk1IQXBZRjdBb0dBUERiYnRMTzUxVmd4U1J1OGQzaE8Kb0xhTW1CSVJRZ3dudHZMblRxZFBZbzNIc3hFV21rdVUrS0VYQWFpZHFldi94cGNvaXl2dXgxUEVqYzRXMGswOAorODNnQXZLSGY5R2FHZlJTUmtXS2ZFTXpoWG1jMmhkQUU2c2RwQmFWUzNXbXdKSVlRY2o4VWtvVlVwUGtjeUI4ClpaNk9PRkZsdTJPTE1HL1p3SThrQUZVQ2dZRUEwaFU4dmI1SzV0cXNCZDFDL2t5VDdxQmRhRmhWYjJKZi82bngKOS9lc3VaRWJwc1FaY1lIZk8rUEl0RUJHRUc1bnhZU3R5Zm1EeVdmZlFaQXljOHV4amhVSnRpSEZjY3dMV3RGdgpsclh5bWNVRXVzamphOVFaN2N0M05QRGxsWUpwY01zOGc2NTVsRVhRY0llZ0xOYVplTi9MMEFTZ2FEaytaYXBLClZmWDBiLzhDZ1lBN2VMUGVoQW0zRUhFd21hc3dSdERWbEFjYkdxdEZzS2YySEo0TGo3d2NrOW5ncGNiK1EyYnIKa2hWNUVHbjdKcnZBdHg3djlRNWNNbXdYVnlrNVpEZXBmanBiOWhYb0dFeGYzQkUwUDZHdFYrOVBQeTBTZ0pwSwpMNVVTSDQ3V1RWTmRveUxRR2FtRlc3UEpYc25rZk9rSEFpOFZZV0ZhaFFKL3FHMGV6bWFHRnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
`
        const serviceName= req.params.serviceName;
        const {ingressName,namespace} = req.body;
        const result = await removeRule(ingressName || 'api-gateway',namespace || 'default',serviceName,kubeConfigText)
        res.status(201).json(result);
    }
)